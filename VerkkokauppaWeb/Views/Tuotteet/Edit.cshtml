@model VerkkokauppaWeb.Models.Tuotteet

@{
    ViewBag.Title = "Edit";
}


<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Tuotteet", FormMethod.Post, new {enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Tuotteet</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.TuoteID)

        <div class="form-group">
            @Html.LabelFor(model => model.Kategoriat.KategoriaID, "KategoriaID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("KategoriaID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Kategoriat.KategoriaID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TuoteNimi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TuoteNimi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TuoteNimi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hinta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hinta, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Hinta, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Varastomaara, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Varastomaara, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Varastomaara, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Kuvaus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Kuvaus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Kuvaus, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="file" name="kuvitus" />

        <div class="form-group">
            @Html.LabelFor(model => model.Kuva, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Kuva != null)
                {
                    var base64 = Convert.ToBase64String(Model.Kuva);
                    var imgscr = string.Format("data:image/jpg;base64,{0}", base64);
                    <img style="height:200px; width:100%; display:block;" src="@imgscr" alt="Kuva tuotteesta">
                }
                else
                {
                    <img src="~/Icons/cart.svg" style="height:200px; width:100%; display:block;" />
                }


                @*@Html.EditorFor(model => model.Kuva, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Kuva, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
